@Library('jenkins_shared_lib') _

def buildString = '''#!/bin/bash
set -e
printenv

unset SUDO_UID SUDO_GID SUDO_USER
if [[ "$CONDA_USERNAME" == "rapidsai" ]]; then
  export MY_UPLOAD_KEY="$RAPIDSAI_CONDA_KEY"
fi
#source activate gdf
#conda-render recipes/xgboost
source build_all.sh                        
'''

def getImg(py_ver, arch) {
  String img = "rapidsai"
  String cuda_ver = config.cuda_ver

  if (arch == "arm64") {
    img += "-driver"
  }

  if (config.arch == "arm64") {
    img += "-arm64"
  }

  return "gpuci/${img}:22.08-cuda${cuda_ver}-devel-centos7-py${py_ver}"
}

pipeline {
  agent any

  options {
    buildDiscarder(logRotator(numToKeepStr: '10'))
    ansiColor('xterm')
    disableConcurrentBuilds(abortPrevious: true)
  }

  stages {
    stage("Build All") {
        environment {
            BUILD_TYPE = sh(returnStdout: true, script: 'rapids-build-type')
            CONDA_CHANNEL="rapidsai-nightly"
            XGBOOST_VERSION="1.6.0dev.rapidsai22.08"
            XGBOOST_BUILD_NUMBER="0"
            XGBOOST_REPO="rapidsai/xgboost"
            XGBOOST_BRANCH="branch-22.08"
            XGBOOST_CONDA_BRANCH="branch-22.08"
            RAPIDS_VER="22.08"
        }

        matrix {
            agent any
            axes {
                axis {
                    name 'PYTHON'
                    values '3.8', '3.9'
                }
                axis {
                    name 'CUDA'
                    values '11.5'
                }
                axis {
                    name 'ARCH'
                    values 'amd64', 'arm64'
                }
            }
            stages {
                stage('Build PR') {
                    when { environment name: 'BUILD_TYPE', value: 'pull-request' }
                    agent {
                        label "cpu4-${ARCH}"
                    }
                    environment {
                        BUILD_TAG="xgboost-conda-build-$CUDA-$PYTHON"
                        CONDA_USERNAME="${CONDA_CHANNEL}"
                    }

                    steps {
                        script {
                            def image = getImg("$PYTHON", "$ARCH")
                            docker.image("${image}").inside("""
                            --pull=always
                            -e CUDA=${CUDA}
                            -e PY_VER=${PYTHON}
                            """) {
                                sh "${buildString}"
                            }
                        }
                    }
                }
                stage('Build Branch') {
                    when { environment name: 'BUILD_TYPE', value: 'nightly' }
                    agent {
                        label "cpu4-${ARCH}"
                    }
                    environment {
                        BUILD_TAG="xgboost-conda-build-$CUDA-$PYTHON"
                        CONDA_USERNAME="${CONDA_CHANNEL}"
                        MY_UPLOAD_KEY=credentials("rapidsai-nightly-conda-upload-api")
                        RAPIDSAI_CONDA_KEY=credentials("rapidsai-conda-upload-api")
                        NVIDIA_UPLOAD_KEY=credentials("nvidia-conda-upload-key")
                    }

                    steps {
                        script {
                            def image = getImg("$PYTHON", "$ARCH")
                            docker.image("${image}").inside("""
                            --pull=always
                            -e CUDA=${CUDA}
                            -e PY_VER=${PYTHON}
                            """) {
                                sh "${buildString}"
                            }
                        }
                    }
                }
            }
        }
    }
  }
}